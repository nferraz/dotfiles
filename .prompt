#!/bin/bash

function _e () {
  local color; local escape; local newline; local bold=0
  if [[ $1 == "bold" ]]; then
    shift; bold=1
  fi
  case $1 in
    white  ) color=37 ;;
    red    ) color=31 ;;
    green  ) color=32 ;;
    yellow ) color=33 ;;
    blue   ) color=34 ;;
    purple ) color=35 ;;
    cyan   ) color=36 ;;
    gray   ) color=90 ;;
    random ) color=$((31 + $RANDOM % 5))
             bold=$(($RANDOM % 2));;
  esac
  echo -ne "\[\e[${bold};${color}m\]${@:2}\[\e[0m\]"
}

function _print_hostname() {
    local DEV_SERVER=$( test -f /etc/bookings/TESTING_OK && echo "1" || echo "0" )
    local SERVER_ROLE=$( cat /etc/bookings/SERVER_ROLE 2>/dev/null )

    if [[ "$HOSTNAME" == *.booking.com ]]; then
        if test -n "$DEV_SERVER"; then
            _e yellow "[DEV] "
        else
            _e red "[PROD] "
        fi

        if test -n "$SERVER_ROLE"; then
            _e bold blue "$SERVER_ROLE "
        fi
    else
        _e gray "[`date +%H:%M`] "
    fi

}

function _print_git_branch() {
    BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
    if [[ $BRANCH == 'master' ]]; then
      _e yellow "($BRANCH) "
    elif [[ $BRANCH == 'trunk' ]]; then
      _e yellow "($BRANCH) "
    elif [[ $BRANCH ]]; then
      _e green "($BRANCH) "
    fi
}

function _print_user() {
    if [ $(id -u) -eq 0 ]; then
        _e gray "# "
    else
        _e gray "$ "
    fi
}

function _update_ps1() {
    export PS1=$(
      _print_hostname
      _print_git_branch
      echo -n "\W "
      _print_user
    )
}

if [ -f "/usr/local/opt/bash-git-prompt/share/gitprompt.sh" ]; then
  __GIT_PROMPT_DIR="/usr/local/opt/bash-git-prompt/share"
  source "/usr/local/opt/bash-git-prompt/share/gitprompt.sh"
else
  export _update_ps1
  export PROMPT_COMMAND="_update_ps1"
fi
